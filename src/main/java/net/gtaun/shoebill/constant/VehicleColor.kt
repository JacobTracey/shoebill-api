package net.gtaun.shoebill.constant

import net.gtaun.shoebill.data.Color

/**
 * This class contains the available VehicleColors for vehicles that are specified by SA:MP.
 * This information was taken from the official SA:MP Wikipedia Page.
 *
 * @author Marvin Haschker
 */
object VehicleColor : Collectable<Color>, Findable<Int, Color> {
    //GTA-SA Car Colors
    private val colors = arrayOf(Color(0x000000FF),
            Color(0xF5F5F5FF.toInt()),
            Color(0x2A77A1FF),
            Color(0x840410FF.toInt()),
            Color(0x263739FF),
            Color(0x86446EFF.toInt()),
            Color(0xD78E10FF.toInt()),
            Color(0x4C75B7FF),
            Color(0xBDBEC6FF.toInt()),
            Color(0x5E7072FF),
            Color(0x46597AFF),
            Color(0x656A79FF),
            Color(0x5D7E8DFF),
            Color(0x58595AFF),
            Color(0xD6DAD6FF.toInt()),
            Color(0x9CA1A3FF.toInt()),
            Color(0x335F3FFF),
            Color(0x730E1AFF),
            Color(0x7B0A2AFF),
            Color(0x9F9D94FF.toInt()),
            Color(0x3B4E78FF),
            Color(0x732E3EFF),
            Color(0x691E3BFF),
            Color(0x96918CFF.toInt()),
            Color(0x515459FF),
            Color(0x3F3E45FF),
            Color(0xA5A9A7FF.toInt()),
            Color(0x635C5AFF),
            Color(0x3D4A68FF),
            Color(0x979592FF.toInt()),
            Color(0x421F21FF),
            Color(0x5F272BFF),
            Color(0x8494ABFF.toInt()),
            Color(0x767B7CFF),
            Color(0x646464FF),
            Color(0x5A5752FF),
            Color(0x252527FF),
            Color(0x2D3A35FF),
            Color(0x93A396FF.toInt()),
            Color(0x6D7A88FF),
            Color(0x221918FF),
            Color(0x6F675FFF),
            Color(0x7C1C2AFF),
            Color(0x5F0A15FF),
            Color(0x193826FF),
            Color(0x5D1B20FF),
            Color(0x9D9872FF.toInt()),
            Color(0x7A7560FF),
            Color(0x989586FF.toInt()),
            Color(0xADB0B0FF.toInt()),
            Color(0x848988FF.toInt()),
            Color(0x304F45FF),
            Color(0x4D6268FF),
            Color(0x162248FF),
            Color(0x272F4BFF),
            Color(0x7D6256FF),
            Color(0x9EA4ABFF.toInt()),
            Color(0x9C8D71FF.toInt()),
            Color(0x6D1822FF),
            Color(0x4E6881FF),
            Color(0x9C9C98FF.toInt()),
            Color(0x917347FF.toInt()),
            Color(0x661C26FF),
            Color(0x949D9FFF.toInt()),
            Color(0xA4A7A5FF.toInt()),
            Color(0x8E8C46FF.toInt()),
            Color(0x341A1EFF),
            Color(0x6A7A8CFF),
            Color(0xAAAD8EFF.toInt()),
            Color(0xAB988FFF.toInt()),
            Color(0x851F2EFF.toInt()),
            Color(0x6F8297FF),
            Color(0x585853FF),
            Color(0x9AA790FF.toInt()),
            Color(0x601A23FF),
            Color(0x20202CFF),
            Color(0xA4A096FF.toInt()),
            Color(0xAA9D84FF.toInt()),
            Color(0x78222BFF),
            Color(0x0E316DFF),
            Color(0x722A3FFF),
            Color(0x7B715EFF),
            Color(0x741D28FF),
            Color(0x1E2E32FF),
            Color(0x4D322FFF),
            Color(0x7C1B44FF),
            Color(0x2E5B20FF),
            Color(0x395A83FF),
            Color(0x6D2837FF),
            Color(0xA7A28FFF.toInt()),
            Color(0xAFB1B1FF.toInt()),
            Color(0x364155FF),
            Color(0x6D6C6EFF),
            Color(0x0F6A89FF),
            Color(0x204B6BFF),
            Color(0x2B3E57FF),
            Color(0x9B9F9DFF.toInt()),
            Color(0x6C8495FF),
            Color(0x4D8495FF),
            Color(0xAE9B7FFF.toInt()),
            Color(0x406C8FFF),
            Color(0x1F253BFF),
            Color(0xAB9276FF.toInt()),
            Color(0x134573FF),
            Color(0x96816CFF.toInt()),
            Color(0x64686AFF),
            Color(0x105082FF),
            Color(0xA19983FF.toInt()),
            Color(0x385694FF),
            Color(0x525661FF),
            Color(0x7F6956FF),
            Color(0x8C929AFF.toInt()),
            Color(0x596E87FF),
            Color(0x473532FF),
            Color(0x44624FFF),
            Color(0x730A27FF),
            Color(0x223457FF),
            Color(0x640D1BFF),
            Color(0xA3ADC6FF.toInt()),
            Color(0x695853FF),
            Color(0x9B8B80FF.toInt()),
            Color(0x620B1CFF),
            Color(0x5B5D5EFF),
            Color(0x624428FF),
            Color(0x731827FF),
            Color(0x1B376DFF),
            Color(0xEC6AAEFF.toInt()),
            Color(0x000000FF),
            Color(0x177517FF),
            Color(0x210606FF),
            Color(0x125478FF),
            Color(0x452A0DFF),
            Color(0x571E1EFF),
            Color(0x010701FF),
            Color(0x25225AFF),
            Color(0x2C89AAFF),
            Color(0x8A4DBDFF.toInt()),
            Color(0x35963AFF),
            Color(0xB7B7B7FF.toInt()),
            Color(0x464C8DFF),
            Color(0x84888CFF.toInt()),
            Color(0x817867FF.toInt()),
            Color(0x817A26FF.toInt()),
            Color(0x6A506FFF),
            Color(0x583E6FFF),
            Color(0x8CB972FF.toInt()),
            Color(0x824F78FF.toInt()),
            Color(0x6D276AFF),
            Color(0x1E1D13FF),
            Color(0x1E1306FF),
            Color(0x1F2518FF),
            Color(0x2C4531FF),
            Color(0x1E4C99FF),
            Color(0x2E5F43FF),
            Color(0x1E9948FF),
            Color(0x1E9999FF),
            Color(0x999976FF.toInt()),
            Color(0x7C8499FF),
            Color(0x992E1EFF.toInt()),
            Color(0x2C1E08FF),
            Color(0x142407FF),
            Color(0x993E4DFF.toInt()),
            Color(0x1E4C99FF),
            Color(0x198181FF),
            Color(0x1A292AFF),
            Color(0x16616FFF),
            Color(0x1B6687FF),
            Color(0x6C3F99FF),
            Color(0x481A0EFF),
            Color(0x7A7399FF),
            Color(0x746D99FF),
            Color(0x53387EFF),
            Color(0x222407FF),
            Color(0x3E190CFF),
            Color(0x46210EFF),
            Color(0x991E1EFF.toInt()),
            Color(0x8D4C8DFF.toInt()),
            Color(0x805B80FF.toInt()),
            Color(0x7B3E7EFF),
            Color(0x3C1737FF),
            Color(0x733517FF),
            Color(0x781818FF),
            Color(0x83341AFF.toInt()),
            Color(0x8E2F1CFF.toInt()),
            Color(0x7E3E53FF),
            Color(0x7C6D7CFF),
            Color(0x020C02FF),
            Color(0x072407FF),
            Color(0x163012FF),
            Color(0x16301BFF),
            Color(0x642B4FFF),
            Color(0x368452FF),
            Color(0x999590FF.toInt()),
            Color(0x818D96FF.toInt()),
            Color(0x99991EFF.toInt()),
            Color(0x7F994CFF),
            Color(0x839292FF.toInt()),
            Color(0x788222FF),
            Color(0x2B3C99FF),
            Color(0x3A3A0BFF),
            Color(0x8A794EFF.toInt()),
            Color(0x0E1F49FF),
            Color(0x15371CFF),
            Color(0x15273AFF),
            Color(0x375775FF),
            Color(0x060820FF),
            Color(0x071326FF),
            Color(0x20394BFF),
            Color(0x2C5089FF),
            Color(0x15426CFF),
            Color(0x103250FF),
            Color(0x241663FF),
            Color(0x692015FF),
            Color(0x8C8D94FF.toInt()),
            Color(0x516013FF),
            Color(0x090F02FF),
            Color(0x8C573AFF.toInt()),
            Color(0x52888EFF),
            Color(0x995C52FF.toInt()),
            Color(0x99581EFF.toInt()),
            Color(0x993A63FF.toInt()),
            Color(0x998F4EFF.toInt()),
            Color(0x99311EFF.toInt()),
            Color(0x0D1842FF),
            Color(0x521E1EFF),
            Color(0x42420DFF),
            Color(0x4C991EFF),
            Color(0x082A1DFF),
            Color(0x96821DFF.toInt()),
            Color(0x197F19FF),
            Color(0x3B141FFF),
            Color(0x745217FF),
            Color(0x893F8DFF.toInt()),
            Color(0x7E1A6CFF),
            Color(0x0B370BFF),
            Color(0x27450DFF),
            Color(0x071F24FF),
            Color(0x784573FF),
            Color(0x8A653AFF.toInt()),
            Color(0x732617FF),
            Color(0x319490FF),
            Color(0x56941DFF),
            Color(0x59163DFF),
            Color(0x1B8A2FFF),
            Color(0x38160BFF),
            Color(0x041804FF),
            Color(0x355D8EFF),
            Color(0x2E3F5BFF),
            Color(0x561A28FF),
            Color(0x4E0E27FF),
            Color(0x706C67FF),
            Color(0x3B3E42FF),
            Color(0x2E2D33FF),
            Color(0x7B7E7DFF),
            Color(0x4A4442FF),
            Color(0x28344EFF)
    )

    /**
     * Gets all available [VehicleColor]s.
     */
    override fun get(): Collection<Color> = colors.toList()

    /**
     * Gets a [VehicleColor] by its id.
     */
    override operator fun get(value: Int): Color? = colors[value]

    /**
     * Gets the id of a [VehicleColor]
     */
    fun getId(color: Color): Int = colors.indexOf(color)

}
